library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity Timer_Demo is
	port(SW   : in  std_logic_vector(1 downto 0);
		  LEDR : out std_logic_vector(0 downto 0);
		  HEX0 : out std_logic_vector(6 downto 0);
		  HEX1 : out std_logic_vector(6 downto 0);
		  HEX2 : out std_logic_vector(6 downto 0);
		  HEX3 : out std_logic_vector(6 downto 0));
end Timer_Demo;

architecture Shell of Timer_Demo is
	signal out_freq : unsigned(1 downto 0);
	signal s_cent   : unsigned(6 downto 0);
	signal s_sec    : unsigned(6 downto 0);
	signal BCD0     : unsigned(6 downto 0);
	signal BCD1     : unsigned(6 downto 0);
	signal BCD2     : unsigned(6 downto 0);
	signal BCD3     : unsigned(6 downto 0);
begin
	
	freq_core    : entity work.FreqDivider(Behavioral)
							port map(clkIn  => CLOCK_50,
										k      => x"017D7840",
										clkOut => out_freq);
	
	timer_core   : entity work.Timer(Behavioral)
							port map(clk      => out_freq,
										start    => SW(0),
										reset    => SW(1),
										out_cent => s_cent,
										out_sec  => s_sec,
										out_led  => LEDR(0));
										
	BCD_Centcore  : entity work.Bin2BCDDecoder(Behavioral)
							 port map(inBin   => s_cent,
								   	 outBCD  => BCD0,
								 		 outBCD2 => BCD1);
										
	BCD_Seccore   : entity work.Bin2BCDDecoder(Behavioral)
							 port map(inBin   => s_sec,
										 outBCD  => BCD2,
										 outBCD2 => BCD3);
									
	Bin7_cent0    : entity work.Bin7SegDecoder(Behavioral)
							 port map(binInput  => BCD0,
										 decOut_n  => HEX0);
										 
	Bin7_cent1    : entity work.Bin7SegDecoder(Behavioral)
							 port map(binInput  => BCD1,
										 decOut_n  => HEX1);
										 
	Bin7_sec0     : entity work.Bin7SegDecoder(Behavioral)
							  port map(binInput  => BCD2,
										  decOut_n  => HEX2);
	
	Bin7_sec1     : entity work.Bin7SegDecodes(Behavioral)
							  port map(binInput  => BCD3,
										  decOut_n  => HEX3);
end Shell;						 
										 
										