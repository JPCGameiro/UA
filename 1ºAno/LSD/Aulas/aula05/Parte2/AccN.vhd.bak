library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity AccN is
	generic (N : positive := 8);
	port(enable : in  std_logic;
	     reset  : in  std_logic;
		  clk    : in  std_logic;
		  dataIn : in  std_logic_vector(N downto 0);
		  dataOut: out std_logic_vector(N downto 0));
end AccN;

architecture Behavioral2 of AccN is
	signal s_adderOut : unsigned(N downto 0);
	signal s_regOut   : unsigned(N downto 0);
begin
	adder_core : entity work.AdderN(Behavioral)
							port map(dataIn0 => dataIn,
										dataIn1 => s_regOut,
										result  => s_adderOut);
										
	reg_core   : entity work.RegN(Behavioral1)
							port map(reset   => reset,
										enable  => enable,
										clk     => clk,
										dataIn  => s_adderOut,
										dataOut => s_regOut);
end Behavioral2;
		  